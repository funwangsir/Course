<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.course.mapper.TeachersMapper">
  <resultMap id="BaseResultMap" type="com.course.model.Teachers">
    <id column="teacherId" jdbcType="VARCHAR" property="teacherid" />
    <result column="teacherPassword" jdbcType="VARCHAR" property="teacherpassword" />
    <result column="teacherName" jdbcType="VARCHAR" property="teachername" />
    <result column="teacherSchool" jdbcType="VARCHAR" property="teacherschool" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  <sql id="Base_Column_List">
    teacherId, teacherPassword, teacherName, teacherSchool, role
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teachers
    where teacherId = #{teacherid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from teachers
    where teacherId = #{teacherid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.course.model.Teachers">
    insert into teachers (teacherId, teacherPassword, teacherName, 
      teacherSchool, role)
    values (#{teacherid,jdbcType=VARCHAR}, #{teacherpassword,jdbcType=VARCHAR}, #{teachername,jdbcType=VARCHAR}, 
      #{teacherschool,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.course.model.Teachers">
    insert into teachers
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherid != null">
        teacherId,
      </if>
      <if test="teacherpassword != null">
        teacherPassword,
      </if>
      <if test="teachername != null">
        teacherName,
      </if>
      <if test="teacherschool != null">
        teacherSchool,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherid != null">
        #{teacherid,jdbcType=VARCHAR},
      </if>
      <if test="teacherpassword != null">
        #{teacherpassword,jdbcType=VARCHAR},
      </if>
      <if test="teachername != null">
        #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="teacherschool != null">
        #{teacherschool,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.course.model.Teachers">
    update teachers
    <set>
      <if test="teacherpassword != null">
        teacherPassword = #{teacherpassword,jdbcType=VARCHAR},
      </if>
      <if test="teachername != null">
        teacherName = #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="teacherschool != null">
        teacherSchool = #{teacherschool,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where teacherId = #{teacherid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.course.model.Teachers">
    update teachers
    set teacherPassword = #{teacherpassword,jdbcType=VARCHAR},
      teacherName = #{teachername,jdbcType=VARCHAR},
      teacherSchool = #{teacherschool,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR}
    where teacherId = #{teacherid,jdbcType=VARCHAR}
  </update>
</mapper>